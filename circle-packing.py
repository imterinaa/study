import numpy as np
import random
from scipy.optimize import minimize
import matplotlib.pyplot as plt

table = np.array(
    [1.000000000000000000000000000000, 0.500000000000000000000000000000, 0.464101615137754587054892683012, 
    0.414213562373095048801688724210, 0.370191908158750137702237641058, 0.333333333333333333333333333333, 
    0.333333333333333333333333333333, 0.302593388348611302909204224934, 0.276768653914155215717770973808, 
    0.262258924190165855095630653709, 0.254854701717148909608835737700, 0.248163470571686841544054487132, 
    0.236067977499789696409173668731, 0.231030727971008638446179972284, 0.221172539086390937264316484926, 
    0.216664742924422421010647936933, 0.208679665570499743200080125264, 0.205604646759568224693193969093, 
    0.205604646759568224693193969093, 0.195224011018748878291305694833, 0.190392146849053511968808973057, 
    0.183833026581681677264411480513, 0.180336009254436500349252193252, 0.176939130595961682695732682453, 
    0.173827661421222233359259594413, 0.171580252187166848283936226172, 0.169307931134573046568970317658, 
    0.166252750038606935814942389058, 0.162903649276644353945069772319, 0.161349109064689865167358846536])
def cons(x):
    d = np.array([])
    for i in range(1, 2*n, 2):
        d = np.append(d, (x[0]-1)**2 - x[i]**2 - x[i+1]**2)
    for i in range(1, 2*n, 2):
        for j in range(i+2, 2*n + 1, 2):
            d = np.append(d, (x[i] - x[j])**2 + (x[i+1] - x[j+1])**2 - 4)
    d = np.append(d, x[0] - 1)
    d = np.append(d, n - x[0])
    return d
def fun(n):
    tmp = 0;
    while (tmp < table[n-1] - 0.001):
        a = np.array([random.uniform(-n,n) for i in range(2*n+1)])
        a[0] = n
        res = minimize(lambda x: x[0], a, constraints=({'type':'ineq','fun': cons}))
        x = res.x / res.x[0]
        x[0] /= res.x[0]
        tmp = x[0]
    draw(n, x)
    print("Разница с табличным значением:", abs(tmp-table[n-1]))
    return
def draw(n, x):
    circle = np.array([])
    fig, ax = plt.subplots()
    plt.xlim(-1.25,1.25)
    plt.ylim(-1.25,1.25)
    ax.set_aspect(1)
    ax.add_artist(plt.Circle((0, 0), 1, color='deeppink'))
    for i in range(1, 2*n+1, 2):
        circle = plt.Circle((x[i], x[i+1]), x[0],color = 'greenyellow')
        ax.add_artist(circle)
    pass
    return
n=4
fun(n)
